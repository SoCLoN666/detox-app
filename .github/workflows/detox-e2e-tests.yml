# name: E2E (iOS)

# on:
#   push:
#     branches: [main, master, testBranch]
#   pull_request:
#     branches: [master, main, testBranch]

# jobs:
#   build:
#     name: E2E (iOS)
#     runs-on: macOS-latest

#     steps:
#       - uses: actions/checkout@v1

#       - name: Install Node
#         uses: actions/setup-node@v1
#         with:
#           node-version: "18"

#       - name: Install Yarn Dependencies
#         run: yarn install

#       - name: Install Pod Dependencies
#         run: cd ./ios && pod install && cd ..

#       - name: Install Detox Dependencies
#         run: |
#           brew tap wix/brew
#           brew install applesimutils

#       - name: Check and Install Xcode Command Line Tools
#         run: |
#           if ! xcode-select -p > /dev/null; then
#             echo "Installing Xcode Command Line Tools..."
#             xcode-select --install
#           else
#             echo "Xcode Command Line Tools already installed."
#           fi

#       - name: Install and Boot iPhone 15 Simulator
#         run: |
#           # Accept Xcode License (required in CI/CD environments)
#           sudo xcodebuild -license accept

#           # Install simulators (e.g., iPhone 15)
#           xcrun simctl list devices
#           xcrun simctl boot "iPhone 15"

#           # Start the simulator (optional, you can also boot the simulator without this)
#           open -a Simulator

#       - name: Run Detox Build
#         run: yarn test:build

#       - name: Run Detox Test(s)
#         run: |
#           yarn start &

#           METRO_BUNDLER_PID=$!

#           yarn test:e2e

#           DETOX_EXIT_CODE=$?

#           kill $METRO_BUNDLER_PID

#           exit $DETOX_EXIT_CODE

name: E2E (iOS)

on:
  push:
    branches: [main, master, testBranch]
  pull_request:
    branches: [master, main, testBranch]

jobs:
  build:
    name: E2E (iOS)
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v1

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: "18"

      - name: Install Yarn Dependencies
        run: yarn install

      - name: Install Pod Dependencies
        run: cd ./ios && pod install && cd ..

      - name: Install Detox Dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils

      - name: Check and Install Xcode Command Line Tools
        run: |
          if ! xcode-select -p > /dev/null; then
            echo "Installing Xcode Command Line Tools..."
            xcode-select --install
          else
            echo "Xcode Command Line Tools already installed."
          fi

      - name: Install and Boot Two iPhone 15 Simulators
        run: |
          # Accept Xcode License (required in CI/CD environments)
          sudo xcodebuild -license accept

          # List available simulators
          echo "Listing available simulators..."
          xcrun simctl list devices

          # Check if the second instance (clone) already exists
          CLONED_SIMULATOR_NAME="iPhone 15 Clone"
          if ! xcrun simctl list devices | grep -q "$CLONED_SIMULATOR_NAME"; then
            echo "Cloning iPhone 15 simulator to create $CLONED_SIMULATOR_NAME..."
            ORIGINAL_SIMULATOR=$(xcrun simctl list devices | grep "iPhone 15" | grep -v "Clone" | head -n 1 | awk -F '[()]' '{print $2}')
            xcrun simctl clone "$ORIGINAL_SIMULATOR" "$CLONED_SIMULATOR_NAME"
          fi

          # Boot the original iPhone 15 simulator
          if ! xcrun simctl list | grep -q "iPhone 15 (.*Booted)"; then
            echo "Booting original iPhone 15 simulator..."
            xcrun simctl boot "iPhone 15"
          else
            echo "Original iPhone 15 simulator is already booted."
          fi

          # Boot the cloned iPhone 15 simulator
          if ! xcrun simctl list | grep -q "$CLONED_SIMULATOR_NAME (.*Booted)"; then
            echo "Booting cloned iPhone 15 simulator ($CLONED_SIMULATOR_NAME)..."
            xcrun simctl boot "$CLONED_SIMULATOR_NAME"
          else
            echo "Cloned iPhone 15 simulator ($CLONED_SIMULATOR_NAME) is already booted."
          fi

      - name: Run Detox Build
        run: yarn test:build

      - name: Run Detox Test(s)
        run: |
          yarn start &

          METRO_BUNDLER_PID=$!

          yarn test:e2e

          DETOX_EXIT_CODE=$?

          kill $METRO_BUNDLER_PID

          exit $DETOX_EXIT_CODE
